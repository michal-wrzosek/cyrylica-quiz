{"version":3,"sources":["rusToPol.ts","Quiz.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["rusLetters","А","letter","pol","а","Б","б","В","в","Г","г","Д","д","Е","е","Ё","ё","Ж","ж","З","з","И","и","Й","й","К","к","Л","л","М","м","Н","н","О","о","П","п","Р","р","С","с","Т","т","У","у","Ф","ф","Х","х","Ц","ц","Ч","ч","Ш","ш","Щ","щ","ъ","ы","ь","Э","э","Ю","ю","Я","я","rusLettersArray","Object","keys","map","key","GlobalStyles","createGlobalStyle","getRandomRusLetter","failureLevel","rusLettersMultipliedByFailureLevel","reduce","sum","rusLetter","timesToRepeat","repeat","Math","floor","random","length","Button","styled","div","NextLetterButton","ButtonsSection","Answer","order","isCorrect","showResults","css","isSelected","Answers","Question","SubHeader","Header","ScoreLabel","ScoreValue","Score","Wrapper","Quiz","useState","question","setQuestion","answers","setAnswers","undefined","selectedAnswer","setSelectedAnswer","score","setScore","values","setFailureLevel","nextQuestion","newQuestion","answersStack","i","NR_OF_ANSWERS","otherLetters","filter","l","a","includes","push","newAnswers","answer","React","useEffect","handleAnswerClick","prev","previousFailureLevel","max","getNewFailureLevelOnFailure","Fragment","onClick","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0e6c51ee.chunk.js","sourcesContent":["export type RusLetter = {\n  letter: string;\n  pol: string;\n};\nexport type RusLetters = { [key: string]: RusLetter };\n\nexport const rusLetters: RusLetters = {\n  А: {\n    letter: 'А',\n    pol: 'a',\n  },\n  а: {\n    letter: 'а',\n    pol: 'a',\n  },\n  Б: {\n    letter: 'Б',\n    pol: 'b',\n  },\n  б: {\n    letter: 'б',\n    pol: 'b',\n  },\n  В: {\n    letter: 'В',\n    pol: 'w',\n  },\n  в: {\n    letter: 'в',\n    pol: 'w',\n  },\n  Г: {\n    letter: 'Г',\n    pol: 'g',\n  },\n  г: {\n    letter: 'г',\n    pol: 'g',\n  },\n  Д: {\n    letter: 'Д',\n    pol: 'd',\n  },\n  д: {\n    letter: 'д',\n    pol: 'd',\n  },\n  Е: {\n    letter: 'Е',\n    pol: 'je',\n  },\n  е: {\n    letter: 'е',\n    pol: 'je',\n  },\n  Ё: {\n    letter: 'Ё',\n    pol: 'jo',\n  },\n  ё: {\n    letter: 'ё',\n    pol: 'jo',\n  },\n  Ж: {\n    letter: 'Ж',\n    pol: 'ż',\n  },\n  ж: {\n    letter: 'ж',\n    pol: 'ż',\n  },\n  З: {\n    letter: 'З',\n    pol: 'z',\n  },\n  з: {\n    letter: 'з',\n    pol: 'z',\n  },\n  И: {\n    letter: 'И',\n    pol: 'i',\n  },\n  и: {\n    letter: 'и',\n    pol: 'i',\n  },\n  Й: {\n    letter: 'Й',\n    pol: 'j',\n  },\n  й: {\n    letter: 'й',\n    pol: 'j',\n  },\n  К: {\n    letter: 'К',\n    pol: 'k',\n  },\n  к: {\n    letter: 'к',\n    pol: 'k',\n  },\n  Л: {\n    letter: 'Л',\n    pol: 'ł',\n  },\n  л: {\n    letter: 'л',\n    pol: 'ł',\n  },\n  М: {\n    letter: 'М',\n    pol: 'm',\n  },\n  м: {\n    letter: 'м',\n    pol: 'm',\n  },\n  Н: {\n    letter: 'Н',\n    pol: 'n',\n  },\n  н: {\n    letter: 'н',\n    pol: 'n',\n  },\n  О: {\n    letter: 'О',\n    pol: 'o',\n  },\n  о: {\n    letter: 'о',\n    pol: 'o',\n  },\n  П: {\n    letter: 'П',\n    pol: 'p',\n  },\n  п: {\n    letter: 'п',\n    pol: 'p',\n  },\n  Р: {\n    letter: 'Р',\n    pol: 'r',\n  },\n  р: {\n    letter: 'р',\n    pol: 'r',\n  },\n  С: {\n    letter: 'С',\n    pol: 's',\n  },\n  с: {\n    letter: 'с',\n    pol: 's',\n  },\n  Т: {\n    letter: 'Т',\n    pol: 't',\n  },\n  т: {\n    letter: 'т',\n    pol: 't',\n  },\n  У: {\n    letter: 'У',\n    pol: 'u',\n  },\n  у: {\n    letter: 'у',\n    pol: 'u',\n  },\n  Ф: {\n    letter: 'Ф',\n    pol: 'f',\n  },\n  ф: {\n    letter: 'ф',\n    pol: 'f',\n  },\n  Х: {\n    letter: 'Х',\n    pol: 'ch',\n  },\n  х: {\n    letter: 'х',\n    pol: 'ch',\n  },\n  Ц: {\n    letter: 'Ц',\n    pol: 'c',\n  },\n  ц: {\n    letter: 'ц',\n    pol: 'c',\n  },\n  Ч: {\n    letter: 'Ч',\n    pol: 'cz',\n  },\n  ч: {\n    letter: 'ч',\n    pol: 'cz',\n  },\n  Ш: {\n    letter: 'Ш',\n    pol: 'sz',\n  },\n  ш: {\n    letter: 'ш',\n    pol: 'sz',\n  },\n  Щ: {\n    letter: 'Щ',\n    pol: 'szcz',\n  },\n  щ: {\n    letter: 'щ',\n    pol: 'szcz',\n  },\n  ъ: {\n    letter: 'ъ',\n    pol: 'znak twardy',\n  },\n  ы: {\n    letter: 'ы',\n    pol: 'y',\n  },\n  ь: {\n    letter: 'ь',\n    pol: 'znak miękki',\n  },\n  Э: {\n    letter: 'Э',\n    pol: 'e',\n  },\n  э: {\n    letter: 'э',\n    pol: 'e',\n  },\n  Ю: {\n    letter: 'Ю',\n    pol: 'ju',\n  },\n  ю: {\n    letter: 'ю',\n    pol: 'ju',\n  },\n  Я: {\n    letter: 'Я',\n    pol: 'ja',\n  },\n  я: {\n    letter: 'я',\n    pol: 'ja',\n  },\n};\n\nexport const rusLettersArray = Object.keys(rusLetters).map(key => rusLetters[key]);\n\nexport const rusToPol = (inputString: string): string[] => {\n  const input = inputString.split('');\n  const output: string[] = [];\n\n  for (let i = 0; i < input.length; i++) {\n    const rusLetter = input[i];\n    const rusLetterObject = rusLetters[rusLetter];\n\n    if (rusLetterObject) {\n      output.push(rusLetterObject.pol);\n    } else {\n      output.push(' ');\n    }\n  }\n\n  return output;\n};\n","import React, { useState } from 'react';\nimport styled, { createGlobalStyle, css } from 'styled-components';\nimport { repeat } from 'rambda';\n\nimport { rusLettersArray, RusLetter, rusLetters } from './rusToPol';\n\ntype FailureLevel = { [rusLetter: string]: number };\n\nconst GlobalStyles = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Roboto&display=swap&subset=cyrillic');\n\n  body {\n    font-family: 'Roboto', sans-serif;\n  }\n\n  *, *:before, *:after {\n    box-sizing: border-box;\n  }\n`;\n\nconst getRandomRusLetter = (rusLettersArray: RusLetter[], failureLevel: FailureLevel): RusLetter => {\n  const rusLettersMultipliedByFailureLevel = rusLettersArray.reduce<RusLetter[]>((sum, rusLetter) => {\n    const timesToRepeat = failureLevel[rusLetter.letter];\n    return [...sum, ...repeat(rusLetter)(timesToRepeat)];\n  }, []);\n\n  const index = Math.floor(Math.random() * rusLettersMultipliedByFailureLevel.length);\n  return rusLettersMultipliedByFailureLevel[index];\n};\n\nconst FAILURE_LEVEL_FAILURE_PENALTY = 9;\nconst FAILURE_LEVEL_SUCCESS_REWARD = 3;\nconst FAILURE_LEVEL_MIN = 1;\nconst FAILURE_LEVEL_INITIAL = 3;\n\nconst getInitialFailureLevel = (): FailureLevel =>\n  Object.values(rusLetters).reduce((sum, { letter }) => ({ ...sum, [letter]: FAILURE_LEVEL_INITIAL }), {});\n\nconst getNewFailureLevelOnSuccess =\n  (rusLetter: RusLetter) =>\n  (previousFailureLevel: FailureLevel): FailureLevel => ({\n    ...previousFailureLevel,\n    [rusLetter.letter]: Math.max(\n      previousFailureLevel[rusLetter.letter] - FAILURE_LEVEL_SUCCESS_REWARD,\n      FAILURE_LEVEL_MIN,\n    ),\n  });\n\nconst getNewFailureLevelOnFailure =\n  (rusLetter: RusLetter) =>\n  (previousFailureLevel: FailureLevel): FailureLevel => ({\n    ...previousFailureLevel,\n    [rusLetter.letter]: previousFailureLevel[rusLetter.letter] + FAILURE_LEVEL_FAILURE_PENALTY,\n  });\n\nconst Button = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 60px;\n  padding: 0 20px;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  border-radius: 8px;\n  color: #171717;\n  font-size: 18px;\n  cursor: pointer;\n  transition: background-color 0.5s ease;\n  line-height: 1;\n\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst NextLetterButton = styled(Button)``;\nconst ButtonsSection = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 30px;\n`;\ninterface AnswerProps {\n  isCorrect: boolean;\n  isSelected: boolean;\n  showResults: boolean;\n  order: number;\n}\nconst Answer = styled(Button)<AnswerProps>`\n  width: 70px;\n  height: 70px;\n  margin: 0 10px;\n  order: ${({ order }) => order};\n  text-align: center;\n\n  ${({ isCorrect, showResults }) =>\n    showResults &&\n    isCorrect &&\n    css`\n      background-color: #b4ff7b;\n\n      &:hover {\n        background-color: #b4ff7b;\n      }\n    `};\n\n  ${({ isCorrect, isSelected, showResults }) =>\n    showResults &&\n    isSelected &&\n    !isCorrect &&\n    css`\n      background-color: #ff9f9f;\n\n      &:hover {\n        background-color: #ff9f9f;\n      }\n    `};\n`;\nconst Answers = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 30px;\n`;\nconst Question = styled.div`\n  font-size: 50px;\n  margin-top: 20px;\n  text-align: center;\n`;\nconst SubHeader = styled.div`\n  font-size: 12px;\n  text-align: center;\n  margin-top: 20px;\n`;\nconst Header = styled.div`\n  font-size: 20px;\n  text-align: center;\n`;\nconst ScoreLabel = styled.div`\n  font-size: 12px;\n  text-align: center;\n`;\nconst ScoreValue = styled.div`\n  font-size: 18px;\n  text-align: center;\n`;\nconst Score = styled.div`\n  padding: 20px;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  border: 1px solid black;\n  border-radius: 8px;\n`;\nconst Wrapper = styled.div`\n  position: relative;\n  overflow: hidden;\n`;\n\nexport const Quiz = () => {\n  const NR_OF_ANSWERS = 5;\n  const [question, setQuestion] = useState<RusLetter | undefined>();\n  const [answers, setAnswers] = useState<{ answer: RusLetter; order: number }[]>([]);\n  const [selectedAnswer, setSelectedAnswer] = useState<RusLetter | undefined>(undefined);\n  const [score, setScore] = useState(0);\n  const [failureLevel, setFailureLevel] = useState(getInitialFailureLevel());\n\n  const nextQuestion = () => {\n    const newQuestion = getRandomRusLetter(rusLettersArray, failureLevel);\n    const answersStack = [newQuestion];\n\n    for (let i = 0; i < NR_OF_ANSWERS - 1; i++) {\n      const otherLetters = rusLettersArray.filter(\n        (l) => !answersStack.map((a) => a.letter).includes(l.letter) && !answersStack.map((a) => a.pol).includes(l.pol),\n      );\n      answersStack.push(getRandomRusLetter(otherLetters, failureLevel));\n    }\n\n    const newAnswers = answersStack.map((a) => ({\n      answer: rusLetters[a.letter],\n      order: Math.floor(Math.random() * NR_OF_ANSWERS * 2),\n    }));\n\n    setQuestion(newQuestion);\n    setAnswers(newAnswers);\n    setSelectedAnswer(undefined);\n  };\n\n  React.useEffect(() => {\n    nextQuestion();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleAnswerClick = (answer: RusLetter) => {\n    if (!selectedAnswer && !!question) {\n      const isCorrect = answer.letter === question.letter;\n\n      if (isCorrect) {\n        setScore((prev) => prev + 10);\n        setFailureLevel(getNewFailureLevelOnSuccess(question));\n      } else {\n        setScore((prev) => (prev > 20 ? prev - 20 : 0));\n        setFailureLevel(getNewFailureLevelOnFailure(question));\n      }\n      setSelectedAnswer(answer);\n    }\n  };\n  const handleNextLetterButtonClick = () => nextQuestion();\n\n  return (\n    <React.Fragment>\n      <GlobalStyles />\n      <Wrapper>\n        {question && (\n          <React.Fragment>\n            <SubHeader>Naucz się czytać cyrylicę - Quiz</SubHeader>\n            <Header>Co znaczy ta litera?</Header>\n            <Question>{question.letter}</Question>\n            <Answers>\n              {answers.map(({ answer, order }) => (\n                <Answer\n                  key={answer.letter}\n                  isCorrect={answer.letter === question.letter}\n                  isSelected={!!selectedAnswer && answer.letter === selectedAnswer.letter}\n                  showResults={!!selectedAnswer}\n                  onClick={() => handleAnswerClick(answer)}\n                  order={order}\n                >\n                  {answer.pol}\n                </Answer>\n              ))}\n            </Answers>\n            {!!selectedAnswer && (\n              <ButtonsSection>\n                <NextLetterButton onClick={handleNextLetterButtonClick}>Następna litera</NextLetterButton>\n              </ButtonsSection>\n            )}\n            <Score>\n              <ScoreLabel>Wynik:</ScoreLabel>\n              <ScoreValue>{score}</ScoreValue>\n            </Score>\n          </React.Fragment>\n        )}\n      </Wrapper>\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nimport { Quiz } from 'Quiz';\n\nconst App: React.FC = () => {\n  return <Quiz />;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}